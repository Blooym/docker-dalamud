name: Publish

on:
  workflow_dispatch:
    inputs:
        push-registry:
            description: 'Push to registry'
            type: boolean
            required: true
            default: true
  schedule:
    - cron: "0 0 * * *"
  push:
    branches: [main]
    paths: 
      - '**/Dockerfile*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  Image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        Dockerfile: ["Dockerfile:latest", "Dockerfile:staging", "Debian/Dockerfile-debian:latest", "Debian/Dockerfile-debian:staging"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Determine whether to push to registry
        run: |
            if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
                echo "PUSH_REGISTRY=${{ github.event.inputs.push-registry }}" >> $GITHUB_ENV
            else
                echo "PUSH_REGISTRY=true" >> $GITHUB_ENV
            fi

      - name: Pull image name from Dockerfile
        run: |
          if [[ ${{ matrix.Dockerfile }} == *-* ]]; then
            echo IMAGE_TAG=$(echo ${{ matrix.Dockerfile }} | cut -d'-' -f2) >> $GITHUB_ENV
          else
            echo IMAGE_TAG=$(echo ${{ matrix.Dockerfile }} | cut -d':' -f2) >> $GITHUB_ENV
          fi

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: true

      - name: Extract Metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          tags: ${{ env.IMAGE_TAG }}

      - name: Build & Publish Image
        uses: docker/build-push-action@v4
        with:
          file: ./${{ matrix.Dockerfile }}
          context: .
          push: ${{ env.PUSH_REGISTRY }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

  Cleanup:
    runs-on: ubuntu-latest
    needs: [ Image ]
    permissions:
      contents: read
      packages: write
      
    steps:
    - name: Prune Untagged 
      uses: vlaurin/action-ghcr-prune@v0.5.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        container: docker-dalamud
        prune-untagged: true
